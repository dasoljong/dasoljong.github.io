{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/JS 동기/비동기","result":{"data":{"markdownRemark":{"id":"5148bb26-cdc0-595f-938e-a1b343789451","html":"<p>데이터를 받는 방식인 동기와 비동기에 관해 알아보자.<br><br></p>\n<h2 id=\"동기-synchronous-동시에-일어나는\" style=\"position:relative;\"><a href=\"#%EB%8F%99%EA%B8%B0-synchronous-%EB%8F%99%EC%8B%9C%EC%97%90-%EC%9D%BC%EC%96%B4%EB%82%98%EB%8A%94\" aria-label=\"동기 synchronous 동시에 일어나는 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>동기 (Synchronous: 동시에 일어나는)</h2>\n<p>말 그대로 동시에 일어난다는 뜻이다.\n만일 요청을 했다면, 요청한 자리에서 결과가 주어져야 한다. 즉, 해당 결과를 받기 전까지 다른 작업을 시행할 수 없다.</p>\n<p>장점: 설계가 매우 간단하고 직관적이다.\n단점: 결과가 주어질 때 까지 다른 작업을 하지 못하고 대기해야 한다.\n<br><br></p>\n<h2 id=\"비동기-asynchronous-동시에-일어나지-않는\" style=\"position:relative;\"><a href=\"#%EB%B9%84%EB%8F%99%EA%B8%B0-asynchronous-%EB%8F%99%EC%8B%9C%EC%97%90-%EC%9D%BC%EC%96%B4%EB%82%98%EC%A7%80-%EC%95%8A%EB%8A%94\" aria-label=\"비동기 asynchronous 동시에 일어나지 않는 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>비동기 (Asynchronous: 동시에 일어나지 않는)</h2>\n<p>자바스크립트의 비동기란, 특정 로직의 실행이 끝날 때까지 기다려주지 않고 나머지 코드를 먼저 실행하는 것을 의미한다.<br>\n자바스크립트에서 비동기가 왜 필요할까?<br>\n화면에서 서버로 데이터를 요청했는데 동기적 특성으로 인하여 데이터를 마냥 기다리기만 한다면 데이터가 크거나 많을 경우\n기약 없이 기다려야 할 수 있기 때문이다.</p>\n<p>장점: 결과가 주어지지 않더라도 기다리지 않고 다른 작업이 가능하다.\n단점: 동기보다 설계가 복잡하다.\n<br><br></p>\n<h2 id=\"예시\" style=\"position:relative;\"><a href=\"#%EC%98%88%EC%8B%9C\" aria-label=\"예시 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>예시</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function-variable function\">handleShare</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    iconList<span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>iconList<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>iconList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>setState는 비동기라 위처럼 콘솔에 찍으면 기대했던 결과 값이 들어오지 않고 그 전의 값이 들어온다.\n콜백 함수를 써서 console을 찍어야 원하는 값이 들어옴을 볼 수 있을 것이다.</p>\n<h3 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>reference</h3>\n<ul>\n<li><a href=\"https://private.tistory.com/24\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://private.tistory.com/24</a></li>\n<li><a href=\"https://joshua1988.github.io/web-development/javascript/javascript-asynchronous-operation/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://joshua1988.github.io/web-development/javascript/javascript-asynchronous-operation/</a></li>\n</ul>","fields":{"slug":"/posts/JS 동기/비동기","tagSlugs":["/tag/java-script/","/tag/frontend/"]},"frontmatter":{"date":"2020-03-20T08:46:37.121Z","description":"데이터를 받는 방식인 동기와 비동기에 관해 알아보자","tags":["JavaScript","Frontend"],"title":"(JavaScript) 동기 / 비동기 ","socialImage":"/media/image-2.jpg"}}},"pageContext":{"slug":"/posts/JS 동기/비동기"}}}