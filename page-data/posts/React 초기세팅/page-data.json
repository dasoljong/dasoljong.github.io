{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/React 초기세팅","result":{"data":{"markdownRemark":{"id":"a61fffa3-29a2-564e-be83-1bd121c379d6","html":"<p>React를 통하여 프로젝트를 진행하기 위해서는 반드시 초기세팅을 거쳐야한다.\n그 방법은 프로젝트마다 조금씩 다를 수 있겠지만 보편적으로 아래와 같은 방법을 거치면 된다,</p>\n<h2 id=\"1trello\" style=\"position:relative;\"><a href=\"#1trello\" aria-label=\"1trello permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.Trello</h2>\n<p>Scrum 방식(SW 개발 방법론) 정리하기\nTrello 만들기 > 멘토 초대하기</p>\n<h2 id=\"2프로젝트-초기-세팅\" style=\"position:relative;\"><a href=\"#2%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%B4%88%EA%B8%B0-%EC%84%B8%ED%8C%85\" aria-label=\"2프로젝트 초기 세팅 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.프로젝트 초기 세팅</h2>\n<h3 id=\"1cracreate-react-app\" style=\"position:relative;\"><a href=\"#1cracreate-react-app\" aria-label=\"1cracreate react app permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1)CRA(Create-React-App)</h3>\n<p>터미널을 켜고\nnpx create-react-app my-app 이미 npm install -g로 react-create-app을 설치했다면 create-react-app my-app(디렉토리 명) 만 입력.</p>\n<h3 id=\"2폴더-구조-정리\" style=\"position:relative;\"><a href=\"#2%ED%8F%B4%EB%8D%94-%EA%B5%AC%EC%A1%B0-%EC%A0%95%EB%A6%AC\" aria-label=\"2폴더 구조 정리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2)폴더 구조 정리</h3>\n<p>Public</p>\n<p>Src</p>\n<ul>\n<li>\n<p>Page</p>\n<ul>\n<li>Main</li>\n<li>Create * Create.js/ Create. scss 로 구성</li>\n</ul>\n</li>\n<li>Images</li>\n<li>Styles - 공통으로 사용</li>\n<li>Component - 공통으로 사용 3)필요한 라이브러리 설치</li>\n</ul>\n<p>*** src 폴더에서 이름에 test가 들어가있는 파일, serviceWorker.js, logo.svg, App.css를 삭제한다.</p>\n<p>*** index.js파일에서 App.js -> Routes.js로 파일명을 바꾸고 필요없는 부분을 삭제한다. 3번째, 5번째, 12번째 그리고 주석처리된 부분을 삭제해주면 된다!</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> ReactDOM <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dom'</span><span class=\"token punctuation\">;</span>\n✂️<span class=\"token keyword\">import</span> <span class=\"token string\">'./index.css'</span><span class=\"token punctuation\">;</span>✂️\n✂️<span class=\"token keyword\">import</span> App <span class=\"token keyword\">from</span> <span class=\"token string\">'./App'</span><span class=\"token punctuation\">;</span>✂️\n✂️<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> serviceWorker <span class=\"token keyword\">from</span> <span class=\"token string\">'./serviceWorker'</span><span class=\"token punctuation\">;</span>✂️\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>Routes <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n✂️<span class=\"token comment\">// If you want your app to work offline and load faster, you can change</span>\n<span class=\"token comment\">// unregister() to register() below. Note this comes with some pitfalls.</span>\n<span class=\"token comment\">// Learn more about service workers: https://bit.ly/CRA-PWA✂️</span>\n✂️serviceWorker<span class=\"token punctuation\">.</span><span class=\"token function\">unregister</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>✂️</code></pre></div>\n<h3 id=\"3-1-router\" style=\"position:relative;\"><a href=\"#3-1-router\" aria-label=\"3 1 router permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3-1) Router</h3>\n<p>가장 초기 세팅되는 Library 로 Router를 통하여 모든 Component 들이 이동 할 수 있다. 일종의 환승 센터라 생각됨. 우선 터미널을 켜고 Router 설치를 희망하는 React프로젝트의 디렉토리로 이동한다.\ncd+[디렉토리 명]</p>\n<p>(1)</p>\n<ul>\n<li>npm install react-router-dom —save</li>\n</ul>\n<p>설치한 React 프로젝트 디렉토리를 열어 package.json 파일에 “dependencies” 중 “react-router-dom” 이 있는지 확인</p>\n<p>없으면</p>\n<ul>\n<li>yarn add react-router-dom</li>\n<li>yarn add cross-env —dev</li>\n</ul>\n<p>(2) react-router-dom: 브라우저에서 사용되는 리액트 라우터 입니다.</p>\n<p>(3) cross-env: 프로젝트에서 NODE_PATH 를 사용하여 절대경로로 파일을 불러오기 위하여 환경 변수를 설정 할 때 운영체제마다 방식이 다르므로 공통적인 방법으로 설정 할 수 있게 해주는 라이브러리입니다.</p>\n<p>src 폴더의 index.js 파일에 Routes.js파일을 생성한 후 Routes컴포넌트를 만들어 연결</p>\n<p>index.js</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> ReactDOM <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-dom\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Routes <span class=\"token keyword\">from</span> <span class=\"token string\">\"./Routes\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//-> Routes 컴포넌트 연결</span>\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>Routes <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"root\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>*ReactDoM.render?</p>\n<p>커퍼넌트를 페이지에 렌더링 하는 역할을 하며, react-dom 모듈을 불러와 사용 할 수 있다. 이 함수의 첫번째 파라미터에는 페이지에 렌더링 할 내용을 JSX형태로 작성하고, 두번째 파라미터에는 해당 JSX를 렌더링 할 document 내부요소를 설정한다.\n여기서는 id 가 root인 요소 안에 렌더링을 하도록 설정했는데 이 요소는 &#x3C;public/index.html> 파일을 열어보면 존재한다</p>\n<p>Routes.js 에 각각의 페이지로 이동할 url주소를 입력해주고 페이지에 해당하는 컴포넌트들을 연결</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> BrowserRouter <span class=\"token keyword\">as</span> Router<span class=\"token punctuation\">,</span> Route<span class=\"token punctuation\">,</span> Switch <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-router-dom\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Main <span class=\"token keyword\">from</span> <span class=\"token string\">\"./Pages/Main/\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Login <span class=\"token keyword\">from</span> <span class=\"token string\">\"./Pages/Login/\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Routes</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>Router<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Switch<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>Route exact path<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span> component<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>Main<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n          <span class=\"token comment\">//=> Main컴포넌트와 연결</span>\n          <span class=\"token operator\">&lt;</span>Route exact path<span class=\"token operator\">=</span><span class=\"token string\">\"/login\"</span> component<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>Login<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n          <span class=\"token comment\">//=> Login컴포넌트와 연결</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Switch<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Router<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"3-2-scss\" style=\"position:relative;\"><a href=\"#3-2-scss\" aria-label=\"3 2 scss permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3-2) SCSS</h3>\n<p>터미널을 켜고 Sass 설치를 희망하는 React프로젝트의 디렉토리로 이동한다.</p>\n<ul>\n<li>npm install node-sass —save\n설치한 React 프로젝트 디렉토리를 열어 package.json 파일에 “dependencies” 중 “node-sass” 이 있는지 확인</li>\n</ul>\n<h3 id=\"3-3-eslint-prettier\" style=\"position:relative;\"><a href=\"#3-3-eslint-prettier\" aria-label=\"3 3 eslint prettier permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3-3) ESLint/ Prettier</h3>\n<p>ESLint\n여러 사람들이 같이 개발 할때는 도량형 스타일 적용이 필요하다. 바로 그 역할을 대신 해주는 것이 ESLint이다</p>\n<p>Prettier\nPrettier는 파일 저장 시점이나 Git 에 커밋할 때 코드를 자동으로 포맷팅 해줌으로써 일관된 코딩 형태를 유지하도록 해준다.\n또한 Prettier를 사용하여 ESLint 는 코딩 컨벤션을 처리하도록 하고 포맷팅 기능은 Prettier 가 담당하도록 구성한다.</p>\n<p>Combine ESLint and Prettier</p>\n<ul>\n<li>npm install —save-dev eslint-config-prettier eslint-plugin-prettier</li>\n</ul>\n<p>.eslintrc.json 파일생성하여 다음과 같이 변경</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"extends\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"react-app\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"prettier\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"plugins\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"prettier\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"rules\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"prettier/prettier\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"error\"</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>reference</h3>\n<ul>\n<li><a href=\"https://velog.io/@kj1509/React-%EC%B4%88%EA%B8%B0%EC%84%B8%ED%8C%85-\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://velog.io/@kj1509/React-%EC%B4%88%EA%B8%B0%EC%84%B8%ED%8C%85-</a></li>\n<li><a href=\"https://velog.io/@ppl8709/%EB%A6%AC%EC%95%A1%ED%8A%B8-%EC%B4%88%EA%B8%B0%EC%84%B8%ED%8C%85%EA%B3%BC-SASS-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://velog.io/@ppl8709/%EB%A6%AC%EC%95%A1%ED%8A%B8-%EC%B4%88%EA%B8%B0%EC%84%B8%ED%8C%85%EA%B3%BC-SASS-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0</a></li>\n</ul>","fields":{"slug":"/posts/React 초기세팅","tagSlugs":["/tag/react/","/tag/frontend/"]},"frontmatter":{"date":"2020-03-08T08:46:37.121Z","description":"React 초기세팅을 해보자","tags":["React","Frontend"],"title":"(React) 초기세팅 ","socialImage":"/media/image-2.jpg"}}},"pageContext":{"slug":"/posts/React 초기세팅"}}}